Patch for Debian bug #84428

Support a 'quiet' option to pam_listfile, to reduce the logging output

Authors: Ben Collins <bcollins@debian.org>

Upstream status: not ready to be submitted

Index: Linux-PAM/modules/pam_listfile/pam_listfile.c
===================================================================
--- Linux-PAM/modules/pam_listfile/pam_listfile.c.orig
+++ Linux-PAM/modules/pam_listfile/pam_listfile.c
@@ -39,6 +39,8 @@
 #include <security/pam_modutil.h>
 #include <security/pam_ext.h>
 
+static int quiet = 0;
+
 /* checks if a user is on a list of members */
 static int is_on_list(char * const *list, const char *member)
 {
@@ -155,6 +157,8 @@
 		    apply_type=APPLY_TYPE_USER;
 		    strncpy(apply_val,myval,sizeof(apply_val)-1);
 		}
+	    } else if (!strcmp(mybuf,"quiet")) {
+		quiet = 1;
 	    } else {
 		free(ifname);
 		pam_syslog(pamh,LOG_ERR, "Unknown option: %s",mybuf);
@@ -316,7 +320,8 @@
 	     ifname, citem, citemp, sense);
 #endif
     if(lstat(ifname,&fileinfo)) {
-	pam_syslog(pamh,LOG_ERR, "Couldn't open %s",ifname);
+	if (!quiet)
+	    pam_syslog(pamh,LOG_ERR, "Couldn't open %s",ifname);
 	free(ifname);
 	return onerr;
     }
@@ -325,16 +330,17 @@
        || !S_ISREG(fileinfo.st_mode)) {
 	/* If the file is world writable or is not a
 	   normal file, return error */
-	pam_syslog(pamh,LOG_ERR,
-		 "%s is either world writable or not a normal file",
-		 ifname);
+	if (!quiet)
+	    pam_syslog(pamh,LOG_ERR,
+	               "%s is either world writable or not a normal file",
+	               ifname);
 	free(ifname);
 	return PAM_AUTH_ERR;
     }
 
     inf = fopen(ifname,"r");
     if(inf == NULL) { /* Check that we opened it successfully */
-	if (onerr == PAM_SERVICE_ERR) {
+	if (onerr == PAM_SERVICE_ERR && !quiet) {
 	    /* Only report if it's an error... */
 	    pam_syslog(pamh,LOG_ERR,  "Error opening %s", ifname);
 	}
@@ -399,8 +405,9 @@
 #endif
 	(void) pam_get_item(pamh, PAM_SERVICE, &service);
 	(void) pam_get_user(pamh, &user_name, NULL);
-	pam_syslog (pamh, LOG_ALERT, "Refused user %s for service %s",
-		    user_name, (const char *)service);
+	if (!quiet)
+	    pam_syslog (pamh, LOG_ALERT, "Refused user %s for service %s",
+	                user_name, (const char *)service);
 	return PAM_AUTH_ERR;
     }
 }
