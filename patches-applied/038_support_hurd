This patch is slightly hurd-specific in that it uses getline which is
not portable.

However hurd is basically the only modern os without maxhostnamelen

Authors: Michal 'hramrach' Suchanek" <hramrach_l@centrum.cz>,
         Steve Langasek <vorlon@debian.org>

Upstream status: submitted in <20070823084620.GA3852@dario.dodds.net>

Index: Linux-PAM/modules/pam_rhosts/pam_rhosts_auth.c
===================================================================
--- Linux-PAM/modules/pam_rhosts/pam_rhosts_auth.c.orig
+++ Linux-PAM/modules/pam_rhosts/pam_rhosts_auth.c
@@ -348,11 +348,18 @@
     register const char *user;
     register char *p;
     int hcheck, ucheck;
+#ifndef MAXHOSTNAMELEN
+    char *buf=NULL;
+    int buflen=0;
+	/* XXX definitely should check for getline if should be portable */
+    while (getline(&buf,&buflen,hostf)) {
+#else
     char buf[MAXHOSTNAMELEN + 128];                       /* host + login */
 
     buf[sizeof (buf)-1] = '\0';                 	/* terminate line */
 
     while (fgets(buf, sizeof(buf), hostf) != NULL) {   /* hostf file line */
+#endif
         p = buf;                              /* from beginning of file.. */
 
 	/* Skip empty or comment lines */
@@ -400,8 +407,12 @@
 	/* First check host part */
 	hcheck=__icheckhost(pamh, opts, raddr, buf, rhost);
 
-	if (hcheck<0)
+	if (hcheck<0) {
+#ifndef MAXHOSTNAMELEN
+	    free(buf);
+#endif
 	    return(1);
+	}
 
 	if (hcheck) {
 	    /* Then check user part */
@@ -411,16 +422,27 @@
 	    ucheck=__icheckuser(pamh, opts, user, ruser);
 
 	    /* Positive 'host user' match? */
-	    if (ucheck>0)
+	    if (ucheck>0) {
+#ifndef MAXHOSTNAMELEN
+		free(buf);
+#endif
 		return(0);
+	    }
 
 	    /* Negative 'host -user' match? */
-	    if (ucheck<0)
+	    if (ucheck<0) {
+#ifndef MAXHOSTNAMELEN
+		free(buf);
+#endif
 		return(1);
+	    }
 
 	    /* Neither, go on looking for match */
 	}
     }
+#ifndef MAXHOSTNAMELEN
+    if(buf)free(buf);
+#endif
 
     return (1);
 }
Index: Linux-PAM/modules/pam_limits/pam_limits.c
===================================================================
--- Linux-PAM/modules/pam_limits/pam_limits.c.orig
+++ Linux-PAM/modules/pam_limits/pam_limits.c
@@ -14,7 +14,7 @@
  */
 
 #if !defined(linux) && !defined(__linux)
-#error THIS CODE IS KNOWN TO WORK ONLY ON LINUX !!!
+#warning THIS CODE IS KNOWN TO WORK ONLY ON LINUX !!!
 #endif
 
 #include "config.h"
Index: Linux-PAM/modules/pam_xauth/pam_xauth.c
===================================================================
--- Linux-PAM/modules/pam_xauth/pam_xauth.c.orig
+++ Linux-PAM/modules/pam_xauth/pam_xauth.c
@@ -63,6 +63,11 @@
 #define XAUTHDEF ".Xauthority"
 #define XAUTHTMP ".xauthXXXXXX"
 
+/* Hurd compatibility */
+#ifndef PATH_MAX
+#define PATH_MAX 4096
+#endif
+
 /* Possible paths to xauth executable */
 static const char * const xauthpaths[] = {
 #ifdef PAM_PATH_XAUTH
