diff -urN Linux-PAM-0.72.orig/Makefile Linux-PAM-0.72/Makefile
--- Linux-PAM-0.72.orig/Makefile	Sun Nov 21 22:02:36 1999
+++ Linux-PAM-0.72/Makefile	Sat Apr 29 11:33:43 2000
@@ -209,12 +209,14 @@
 ## the rules
 ##
 
-all: .freezemake headers
-
+all: headers
 	@for i in $(DIRS) ; do \
-		$(MAKE) -C $$i all ; \
-		if [ $$? -ne 0 ]; then break ; fi ; \
+		$(MAKE) -C $$i all || exit 1; \
 	done
+
+# Let's get a dynamic libpam.so first
+bootstrap-libpam: headers
+	$(MAKE) -C libpam bootstrap-libpam
 
 .freezemake: Makefile
 	@touch .freezemake
diff -urN Linux-PAM-0.72.orig/libpam/Makefile Linux-PAM-0.72/libpam/Makefile
--- Linux-PAM-0.72.orig/libpam/Makefile	Sun Nov 21 21:08:56 1999
+++ Linux-PAM-0.72/libpam/Makefile	Sat Apr 29 11:33:43 2000
@@ -26,6 +26,8 @@
 
 ifeq ($(DEBUG_REL),yes)
  LIBNAME=libpamd
+ CFLAGS += -D"DEBUG"
+ CFLAGS += -g
 else
  LIBNAME=libpam
 endif
@@ -98,12 +94,16 @@
 	$(CC) $(CFLAGS) $(DYNAMIC) $(CPPFLAGS) $(TARGET_ARCH) -c $< -o $@
 
 static/%.o : %.c
-	$(CC) $(CFLAGS) $(STATIC) $(CPPFLAGS) $(TARGET_ARCH) -c $< -o $@
+	$(CC) $(CFLAGS) $(STATIC) $(DYNAMIC) $(CPPFLAGS) $(TARGET_ARCH) -c $< -o $@
+
+bootstrap-libpam: bootdir $(LIBPAM)
+bootdir:
+	test -d dynamic || mkdir dynamic
 
 $(LIBPAM): $(DLIBOBJECTS)
 ifdef DYNAMIC_LIBPAM
     ifeq ($(USESONAME),yes)
-	$(LD_L) $(SOSWITCH) $(LIBPAMNAME) -o $@ $(DLIBOBJECTS) $(MODULES) $(LINKLIBS)
+	$(LD_L) $(SOSWITCH) $(LIBPAMNAME) -o $@ $(DLIBOBJECTS) $(LINKLIBS) -ldl -lcrypt
     else
 	$(LD_L) -o $@ $(DLIBOBJECTS) $(MODULES)
     endif
diff -urN Linux-PAM-0.72.orig/libpam/include/security/_pam_macros.h Linux-PAM-0.72/libpam/include/security/_pam_macros.h
--- Linux-PAM-0.72.orig/libpam/include/security/_pam_macros.h	Mon Nov  8 00:41:23 1999
+++ Linux-PAM-0.72/libpam/include/security/_pam_macros.h	Sat Apr 29 11:33:44 2000
@@ -64,6 +64,9 @@
 #include <sys/types.h>
 #include <stdarg.h>
 #include <errno.h>
+#include <sys/stat.h>
+#include <fcntl.h>
+#include <unistd.h>
 
 /*
  * This is for debugging purposes ONLY. DO NOT use on live systems !!!
@@ -81,37 +84,55 @@
 				   , const int line)
 {
     FILE *logfile;
-    int must_close = 1;
-    
-    if (!(logfile = fopen(_PAM_LOGFILE,"a"))) {
+    int must_close = 1, fd;
+   
+#ifdef O_NOFOLLOW
+    if ((fd = open(_PAM_LOGFILE, O_WRONLY|O_NOFOLLOW|O_APPEND)) != -1) {
+#else
+    if ((fd = open(_PAM_LOGFILE, O_WRONLY|O_APPEND)) != -1) {
+#endif
+	if (!(logfile = fdopen(fd,"a"))) {
+	    logfile = stderr;
+	    must_close = 0;
+	    close(fd);
+	}
+    } else {
         logfile = stderr;
-        must_close = 0;
+	must_close = 0;
     }
     fprintf(logfile,"[%s:%s(%d)] ",file, fn, line);
-    if (must_close) {
-        fflush(logfile);
+    fflush(logfile);
+    if (must_close)
         fclose(logfile);
-    }
 }
 
 static void _pam_output_debug(const char *format, ...)
 {
     va_list args;
     FILE *logfile;
-    int must_close = 1;
+    int must_close = 1, fd;
     
     va_start(args, format);
 
-    if (!(logfile = fopen(_PAM_LOGFILE,"a"))) {
-        logfile = stderr;
-        must_close = 0;
+#ifdef O_NOFOLLOW
+    if ((fd = open(_PAM_LOGFILE, O_WRONLY|O_NOFOLLOW|O_APPEND)) != -1) {
+#else
+    if ((fd = open(_PAM_LOGFILE, O_WRONLY|O_APPEND)) != -1) {
+#endif
+	if (!(logfile = fdopen(fd,"a"))) {
+	    logfile = stderr;
+	    must_close = 0;
+	    close(fd);
+	}
+    } else {
+	logfile = stderr;
+	must_close = 0;
     }
     vfprintf(logfile, format, args);
     fprintf(logfile, "\n");
-    if (must_close) {
-        fflush(logfile);
+    fflush(logfile);
+    if (must_close)
         fclose(logfile);
-    }
 
     va_end(args);
 }
diff -urN Linux-PAM-0.72.orig/libpam/pam_malloc.c Linux-PAM-0.72/libpam/pam_malloc.c
--- Linux-PAM-0.72.orig/libpam/pam_malloc.c	Sat Dec 26 23:34:23 1998
+++ Linux-PAM-0.72/libpam/pam_malloc.c	Sat Apr 29 11:33:44 2000
@@ -87,18 +87,27 @@
 static void _pam_output_xdebug_info(void)
 {
     FILE *logfile;
-    int must_close = 1;
-    
-    if (!(logfile = fopen(_PAM_LOGFILE,"a"))) {
-        logfile = stderr;
-        must_close = 0;
+    int must_close = 1, fd;
+
+#ifdef O_NOFOLLOW
+    if ((fd = open(_PAM_LOGFILE, O_WRONLY|O_NOFOLLOW|O_APPEND)) != -1) {
+#else
+    if ((fd = open(_PAM_LOGFILE, O_WRONLY|O_APPEND)) != -1) {
+#endif
+	if (!(logfile = fdopen(fd,"a"))) {
+	    logfile = stderr;
+	    must_close = 0;
+	    close(fd);
+	}
+    } else {
+	logfile = stderr;
+	must_close = 0;
     }
     fprintf(logfile, "[%s:%s(%d)->%s()] ",
            last_file, last_call, last_line, last_fn);
-    if (must_close) {
-        fflush(logfile);
+    fflush(logfile);
+    if (must_close)
         fclose(logfile);
-    }
 }
 
 static void hinder(void)
diff -urN Linux-PAM-0.72.orig/libpam/pam_tokens.h Linux-PAM-0.72/libpam/pam_tokens.h
--- Linux-PAM-0.72.orig/libpam/pam_tokens.h	Sun Jul 12 01:17:15 1998
+++ Linux-PAM-0.72/libpam/pam_tokens.h	Sat Apr 29 11:36:02 2000
@@ -63,6 +63,8 @@
     "authtok_expired",   /* 27 */
     "module_unknown",    /* 28 */
     "bad_item",          /* 29 */
+    "conv_again",        /* 30 */
+    "incomplete",        /* 31 */
 /* add new return codes here */
     "default"            /* this is _PAM_RETURN_VALUES and indicates
 			    the default return action */

