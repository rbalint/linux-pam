diff -urN Linux-PAM-0.72/modules/pam_time/pam_time.c Linux-PAM-0.72.new/modules/pam_time/pam_time.c
--- Linux-PAM-0.72/modules/pam_time/pam_time.c	Tue Jul  3 17:19:45 2001
+++ Linux-PAM-0.72.new/modules/pam_time/pam_time.c	Tue Jul  3 17:19:23 2001
@@ -319,7 +319,11 @@
 		    return FALSE;
 	  }
      }
-     return ( !len );
+     /* By this point we know that we didn't treat a * in b as a wildcard.
+	the only way we got done with the loop is if we consumed every
+	character in b.  Thus the strings are equal if their
+	lengths are the same otherwise not equal. */
+     return (strlen (a) == strlen (b));
 }
 
 typedef struct {
diff -urN Linux-PAM-0.72/modules/pam_unix/support.c Linux-PAM-0.72.new/modules/pam_unix/support.c
--- Linux-PAM-0.72/modules/pam_unix/support.c	Tue Jul  3 17:19:47 2001
+++ Linux-PAM-0.72.new/modules/pam_unix/support.c	Tue Jul  3 17:19:23 2001
@@ -523,7 +523,7 @@
 			if (on(UNIX_AUDIT, ctrl)) {
 				/* this might be a typo and the user has given a password
 				   instead of a username. Careful with this. */
-				_log_err(LOG_ALERT, "check pass; user (%s) unknown", name);
+				_log_err(LOG_WARNING, "check pass; user (%s) unknown", name);
 			} else {
 				_log_err(LOG_ALERT, "check pass; user unknown");
 			}
diff -urN Linux-PAM-0.72/modules/pam_unix/unix_chkpwd.c Linux-PAM-0.72.new/modules/pam_unix/unix_chkpwd.c
--- Linux-PAM-0.72/modules/pam_unix/unix_chkpwd.c	Tue Jul  3 17:19:46 2001
+++ Linux-PAM-0.72.new/modules/pam_unix/unix_chkpwd.c	Tue Jul  3 17:19:23 2001
@@ -127,7 +127,7 @@
 		}
 	}
 	if (pwd == NULL || salt == NULL) {
-		_log_err(LOG_ALERT, "check pass; user unknown");
+		_log_err(LOG_WARNING, "check pass; user unknown");
 		p = NULL;
 		return retval;
 	}
